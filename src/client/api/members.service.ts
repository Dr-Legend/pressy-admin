/**
 * Pressy Admin API
 * Cœur du système pressy
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
/* tslint:disable:no-unused-variable member-ordering */

import IHttpClient from "../IHttpClient";
import { inject, injectable } from "inversify";
import { IAPIConfiguration } from "../IAPIConfiguration";
import { Headers } from "../Headers";
import HttpResponse from "../HttpResponse";

import { MemberInfoDto } from '../model/memberInfoDto';
import { TYPES } from "../variables";


@injectable()
export class MembersService {
    
    @inject(TYPES.IApiHttpClient) private httpClient: IHttpClient;
    @inject(TYPES.IAPIConfiguration) private APIConfiguration: IAPIConfiguration;
    get basePath(): string {
        return this.APIConfiguration.basePath || 'https://pressy-admin-api-dev.herokuapp.com/v1';
    }

    /**
     * 
     * 
     
     */
    public async memberGetAllMembers(observe?: 'body', headers?: Headers): Promise<Array<MemberInfoDto>>;
    public async memberGetAllMembers(observe?: 'response', headers?: Headers): Promise<HttpResponse<Array<MemberInfoDto>>>;
    public async memberGetAllMembers(observe: any = 'body', headers: Headers = {}): Promise<any> {
        // authentication (Bearer) required
        if (this.APIConfiguration.apiKeys["Authorization"]) {
            headers['Authorization'] = this.APIConfiguration.apiKeys["Authorization"];
        }
        headers['Accept'] = 'application/json';

        let response = await this.httpClient.get(`${this.basePath}/member`, headers);
        return response.response;
    }

    public async memberGetMember(id: number, headers?: Headers): Promise<MemberInfoDto>;
    public async memberGetMember(id: number, headers?: Headers): Promise<HttpResponse<MemberInfoDto>>;
    public async memberGetMember(id: number, headers: Headers = {}): Promise<any> {
        // authentication (Bearer) required
        if (this.APIConfiguration.apiKeys["Authorization"]) {
            headers['Authorization'] = this.APIConfiguration.apiKeys["Authorization"];
        }
        headers['Accept'] = 'application/json';

        let response = await this.httpClient.get(`${this.basePath}/member/${id}`, headers);
        return response.response;
    }

}
